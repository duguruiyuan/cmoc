<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xuequ.cmoc.dao.CourseBuyerInfoMapper" >
  <resultMap id="BaseResultMap" type="com.xuequ.cmoc.model.CourseBuyerInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="wechat_num" property="wechatNum" jdbcType="VARCHAR" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="head_img" property="headImg" jdbcType="VARCHAR" />
    <result column="creater" property="creater" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, mobile, wechat_num, openid, head_img, creater, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_course_buyer_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <resultMap id="BuyerBaseResultMap" type="com.xuequ.cmoc.view.CourseBuyerView" >
    <result column="res_amount" property="resAmount" jdbcType="DECIMAL" />
  </resultMap>
  <select id="selectCourseBuyerByPage" resultMap="BuyerBaseResultMap">
  	SELECT bi.id, bi.name, bi.mobile, bi.wechat_num, bi.openid, 
  		bi.head_img, po.amount res_amount
  	FROM t_course_buyer_info bi
	INNER JOIN t_product_order po ON po.`cust_id` = bi.`id`
	WHERE po.`product_type`='COURSE' AND po.`product_id` = #{params.productId,jdbcType=INTEGER}
	order by po.create_time desc 
  </select>
  <select id="selectByOpenid" resultMap="BaseResultMap">
  	select 
    DISTINCT <include refid="Base_Column_List" />
    from t_course_buyer_info
    where openid = #{openid,jdbcType=VARCHAR}
    order by create_time desc
  </select>
  
  <resultMap id="OrderBaseResultMap" extends="BaseResultMap" type="com.xuequ.cmoc.view.CourseBuyerView" >
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="product_type" property="productType" jdbcType="VARCHAR" />
  </resultMap>
  <select id="selectRemindOrder" resultMap="OrderBaseResultMap">
  	SELECT bi.id, name, mobile, wechat_num, openid, po.`order_no`,po.`product_type` 
  	FROM t_course_buyer_info bi
	INNER JOIN t_product_order po ON bi.`id` = po.cust_id
	WHERE po.`order_status`='001' AND 
	bi.`mobile` = #{mobile,jdbcType=VARCHAR} 
	AND bi.`openid` = #{openid,jdbcType=VARCHAR}
	AND po.`product_id`= #{courseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_course_buyer_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xuequ.cmoc.model.CourseBuyerInfo" >
    insert into t_course_buyer_info (id, name, mobile, 
      wechat_num, openid, head_img, creater, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{wechatNum,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR}, #{headImg,jdbcType=VARCHAR}, 
      #{creater,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.xuequ.cmoc.model.CourseBuyerInfo" >
    insert into t_course_buyer_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="wechatNum != null" >
        wechat_num,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="headImg != null" >
        head_img,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="wechatNum != null" >
        #{wechatNum,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null" >
        #{headImg,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xuequ.cmoc.model.CourseBuyerInfo" >
    update t_course_buyer_info
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="wechatNum != null" >
        wechat_num = #{wechatNum,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null" >
        head_img = #{headImg,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xuequ.cmoc.model.CourseBuyerInfo" >
    update t_course_buyer_info
    set name = #{name,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      wechat_num = #{wechatNum,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      head_img = #{headImg,jdbcType=VARCHAR},
      creater = #{creater,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>