<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xuequ.cmoc.dao.CourseInfoMapper" >
  <resultMap id="BaseResultMap" type="com.xuequ.cmoc.model.CourseInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="course_name" property="courseName" jdbcType="VARCHAR" />
    <result column="course_num" property="courseNum" jdbcType="VARCHAR" />
    <result column="course_type" property="courseType" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="addr" property="addr" jdbcType="VARCHAR" />
    <result column="start_date" property="startDate" jdbcType="TIMESTAMP" />
    <result column="end_date" property="endDate" jdbcType="TIMESTAMP" />
    <result column="res_amount" property="resAmount" jdbcType="DECIMAL" />
    <result column="total_price" property="totalPrice" jdbcType="DECIMAL" />
    <result column="activity_price" property="activityPrice" jdbcType="DECIMAL" />
    <result column="course_peoples" property="coursePeoples" jdbcType="INTEGER" />
    <result column="course_desc" property="courseDesc" jdbcType="VARCHAR" />
    <result column="shelves" property="shelves" jdbcType="INTEGER" />
    <result column="creater_id" property="createrId" jdbcType="INTEGER" />
    <result column="creater" property="creater" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updater_id" property="updaterId" jdbcType="INTEGER" />
    <result column="updater" property="updater" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="course_img" property="courseImg" jdbcType="VARCHAR" />
    <result column="sign_way" property="signWay" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xuequ.cmoc.model.CourseInfo" extends="BaseResultMap" >
    <result column="course_details" property="courseDetails" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, course_name, course_num, course_type, city, addr, start_date, end_date, res_amount, 
    total_price, activity_price, course_peoples, course_desc, shelves, creater_id, creater, 
    create_time, updater_id, updater, update_time, course_img, sign_way
  </sql>
  <sql id="Blob_Column_List" >
    course_details
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_course_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectShelvesList" resultMap="BaseResultMap">
  	SELECT
	<include refid="Base_Column_List" />
	FROM t_course_info
	WHERE is_delete = 'N' AND shelves = 1
  </select>
  
  <resultMap id="ListResultMap" type="com.xuequ.cmoc.view.CourseListView" extends="BaseResultMap" >
  	<result column="peoples" property="peoples" jdbcType="INTEGER" />
  </resultMap>
  <select id="selectShelvesSignByPage" resultMap="ListResultMap">
  	SELECT
	<include refid="Base_Column_List" />, IFNULL(bu.peoples,0) peoples
	FROM t_course_info ci
	LEFT JOIN (
	   SELECT COUNT(1) peoples, product_id 
	   FROM t_product_order WHERE order_status = '000' and product_type='COURSE' 
	   GROUP BY product_id
	) bu ON ci.`id` = bu.product_id 
	WHERE is_delete = 'N' AND shelves = 1
  </select>
  
  <resultMap id="DetailResultMap" type="com.xuequ.cmoc.view.CourseListView" extends="ResultMapWithBLOBs" >
  	<result column="peoples" property="peoples" jdbcType="INTEGER" />
  </resultMap>
  <select id="selectDetailById" resultMap="DetailResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />, IFNULL(bu.peoples,0) peoples
    from t_course_info ci
    LEFT JOIN (
	   SELECT COUNT(1) peoples, product_id 
	   FROM t_product_order 
	   WHERE product_type='COURSE' and order_status = '000' 
	   and product_id = #{productId,jdbcType=INTEGER}
	   GROUP BY product_id
	) bu ON ci.`id` = bu.product_id 
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectListByPage" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" />
  	from t_course_info
  	where is_delete = 'N'
  	<if test="params.id != null">
  		and id = #{params.id,jdbcType=INTEGER}
  	</if>
  	<if test="params.courseName != null">
  		and course_name = #{params.courseName,jdbcType=VARCHAR}
  	</if>
  	<if test="params.courseType != null">
  		and course_type = #{params.courseType,jdbcType=VARCHAR}
  	</if>
  	<if test="params.city != null">
  		and city = #{params.city,jdbcType=VARCHAR}
  	</if>
  	<if test="params.shelves != null">
  		and shelves = #{params.shelves,jdbcType=INTEGER}
  	</if>
  </select>
  
  <resultMap id="ScheduResultMap" type="com.xuequ.cmoc.view.CourseSchduleActivityView">
  	<result column="activity_id" property="activityId" jdbcType="INTEGER" />
  	<result column="activity_name" property="activityName" jdbcType="VARCHAR" />
  	<result column="activity_num" property="activityNum" jdbcType="VARCHAR" />
  	<result column="start_date" property="startDate" jdbcType="TIMESTAMP" />
  	<result column="activity_peoples" property="activityPeoples" jdbcType="INTEGER" />
  	<result column="buy_count" property="buyCount" jdbcType="INTEGER" />
  	<result column="is_full" property="isFull" jdbcType="VARCHAR" />
  </resultMap>
  <select id="selectScheduActivityInfoByCourseId" resultMap="ScheduResultMap">
 	select ai.id activity_id, ai.`activity_name`, ai.`activity_num`, ai.`start_date`, 
 		   ai.`activity_peoples`, ifnull(po.buy_count,0) buy_count, ai.is_full
	from t_course_info ci 
	inner join t_activity_info ai on ai.`product_id` = ci.`id`
	left join (
	  select count(1) buy_count, t.`product_id`, t.`activity_id`
	  from t_product_order t 
	  where t.`product_id` = #{courseId,jdbcType=INTEGER} and t.`order_status` = '000'
	) po on po.product_id = ci.`id` and ai.id = po.activity_id
	where ci.`id` = #{courseId,jdbcType=INTEGER} and ai.start_date > now()
	order by ai.start_date
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_course_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xuequ.cmoc.model.CourseInfo" >
    insert into t_course_info (id, course_name, course_num, 
      course_type, city, 
      addr, start_date, end_date, 
      res_amount, total_price, activity_price, 
      course_peoples, course_desc, shelves, 
      creater_id, creater, create_time, 
      updater_id, updater, update_time, 
      course_details)
    values (#{id,jdbcType=INTEGER}, #{courseName,jdbcType=VARCHAR}, #{courseNum,jdbcType=VARCHAR}, 
      #{courseType,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{addr,jdbcType=VARCHAR}, #{startDate,jdbcType=TIMESTAMP}, #{endDate,jdbcType=TIMESTAMP}, 
      #{resAmount,jdbcType=DECIMAL}, #{totalPrice,jdbcType=DECIMAL}, #{activityPrice,jdbcType=DECIMAL}, 
      #{coursePeoples,jdbcType=INTEGER}, #{courseDesc,jdbcType=VARCHAR}, #{shelves,jdbcType=INTEGER}, 
      #{createrId,jdbcType=INTEGER}, #{creater,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updaterId,jdbcType=INTEGER}, #{updater,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{courseDetails,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.xuequ.cmoc.model.CourseInfo" >
    insert into t_course_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="courseName != null" >
        course_name,
      </if>
      <if test="courseNum != null" >
        course_num,
      </if>
      <if test="courseType != null" >
        course_type,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="addr != null" >
        addr,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="resAmount != null" >
        res_amount,
      </if>
      <if test="totalPrice != null" >
        total_price,
      </if>
      <if test="activityPrice != null" >
        activity_price,
      </if>
      <if test="coursePeoples != null" >
        course_peoples,
      </if>
      <if test="courseDesc != null" >
        course_desc,
      </if>
      <if test="shelves != null" >
        shelves,
      </if>
      <if test="createrId != null" >
        creater_id,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updaterId != null" >
        updater_id,
      </if>
      <if test="updater != null" >
        updater,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="courseDetails != null" >
        course_details,
      </if>
      <if test="courseImg != null" >
        course_img,
      </if>
      <if test="signWay != null" >
        sign_way,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="courseName != null" >
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseNum != null" >
        #{courseNum,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null" >
        #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="addr != null" >
        #{addr,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="resAmount != null" >
        #{resAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null" >
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="activityPrice != null" >
        #{activityPrice,jdbcType=DECIMAL},
      </if>
      <if test="coursePeoples != null" >
        #{coursePeoples,jdbcType=INTEGER},
      </if>
      <if test="courseDesc != null" >
        #{courseDesc,jdbcType=VARCHAR},
      </if>
      <if test="shelves != null" >
        #{shelves,jdbcType=INTEGER},
      </if>
      <if test="createrId != null" >
        #{createrId,jdbcType=INTEGER},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updaterId != null" >
        #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="updater != null" >
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="courseDetails != null" >
        #{courseDetails,jdbcType=LONGVARBINARY},
      </if>
      <if test="courseImg != null" >
        #{courseImg,jdbcType=VARCHAR},
      </if>
      <if test="signWay != null" >
        #{signWay,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xuequ.cmoc.model.CourseInfo" >
    update t_course_info
    <set >
      <if test="courseName != null" >
        course_name = #{course_name,jdbcType=VARCHAR},
      </if>
      <if test="courseNum != null" >
        course_num = #{courseNum,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null" >
        course_type = #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="addr != null" >
        addr = #{addr,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="resAmount != null" >
        res_amount = #{resAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null" >
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="activityPrice != null" >
        activity_price = #{activityPrice,jdbcType=DECIMAL},
      </if>
      <if test="coursePeoples != null" >
        course_peoples = #{coursePeoples,jdbcType=INTEGER},
      </if>
      <if test="courseDesc != null" >
        course_desc = #{courseDesc,jdbcType=VARCHAR},
      </if>
      <if test="shelves != null" >
        shelves = #{shelves,jdbcType=INTEGER},
      </if>
      <if test="createrId != null" >
        creater_id = #{createrId,jdbcType=INTEGER},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updaterId != null" >
        updater_id = #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="updater != null" >
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="courseDetails != null" >
        course_details = #{courseDetails,jdbcType=LONGVARBINARY},
      </if>
      <if test="courseImg != null" >
        course_img = #{courseImg,jdbcType=VARCHAR},
      </if>
      <if test="signWay != null" >
        sign_way = #{signWay,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xuequ.cmoc.model.CourseInfo" >
    update t_course_info
    <set >
      <if test="courseName != null" >
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseNum != null" >
        course_num = #{courseNum,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null" >
        course_type = #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="addr != null" >
        addr = #{addr,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="resAmount != null" >
        res_amount = #{resAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null" >
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="activityPrice != null" >
        activity_price = #{activityPrice,jdbcType=DECIMAL},
      </if>
      <if test="coursePeoples != null" >
        course_peoples = #{coursePeoples,jdbcType=INTEGER},
      </if>
      <if test="courseDesc != null" >
        course_desc = #{courseDesc,jdbcType=VARCHAR},
      </if>
      <if test="shelves != null" >
        shelves = #{shelves,jdbcType=INTEGER},
      </if>
      <if test="createrId != null" >
        creater_id = #{createrId,jdbcType=INTEGER},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updaterId != null" >
        updater_id = #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="updater != null" >
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="courseDetails != null" >
        course_details = #{courseDetails,jdbcType=LONGVARBINARY},
      </if>
      <if test="courseImg != null" >
        course_img = #{courseImg,jdbcType=VARCHAR},
      </if>
      <if test="signWay != null" >
        sign_way = #{signWay,jdbcType=INTEGER},
      </if>
      <if test="courseDetails != null" >
        course_details = #{courseDetails,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xuequ.cmoc.model.CourseInfo" >
    update t_course_info
    set course_name = #{courseName,jdbcType=VARCHAR},
      course_num = #{courseNum,jdbcType=VARCHAR},
      course_type = #{courseType,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      addr = #{addr,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      res_amount = #{resAmount,jdbcType=DECIMAL},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      activity_price = #{activityPrice,jdbcType=DECIMAL},
      course_peoples = #{coursePeoples,jdbcType=INTEGER},
      course_desc = #{courseDesc,jdbcType=VARCHAR},
      shelves = #{shelves,jdbcType=INTEGER},
      creater_id = #{createrId,jdbcType=INTEGER},
      creater = #{creater,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updater_id = #{updaterId,jdbcType=INTEGER},
      updater = #{updater,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="delCourse">
  	update t_course_info set is_delete = 'Y' where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateShelves">
  	update t_course_info set shelves = #{shelves,jdbcType=INTEGER}
  	where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectCourseGroupOrder" resultType="com.xuequ.cmoc.view.CourseGroupOrderView">
  	SELECT 
  	ci.`total_price` totalPrice, 
  	IFNULL(cs.member, 0) member, 
  	po.`order_status` orderStatus, 
  	ai.`activity_name` activityName, 
  	ai.`start_date` startDate, 
  	ai.`activity_addr` activityAddr,
  	ai.`activity_num` activityNum,
  	po.`order_no` orderNo,
  	po.`sign_name` emerName,
  	po.`sign_phone` emerMobile
	FROM t_product_order po
	INNER JOIN t_course_info ci ON po.`product_id` = ci.`id`
	INNER JOIN t_activity_info ai ON ai.`id` = po.`activity_id`
	LEFT JOIN (
	  SELECT COUNT(1) member, csi.`order_no` FROM t_child_sign_info csi GROUP BY csi.`order_no`
	) cs ON po.`order_no` = cs.order_no 
	WHERE po.`openid` = #{openid,jdbcType=VARCHAR}
	<if test="orderNo != null">
		and po.order_no = #{orderNo,jdbcType=VARCHAR}
	</if>
  </select>
</mapper>